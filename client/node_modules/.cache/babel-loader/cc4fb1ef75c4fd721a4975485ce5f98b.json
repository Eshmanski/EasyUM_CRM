{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const useRequest = () => {\n  _s();\n\n  const [err, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body, headers = {}) => {\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-type'] = 'application/json';\n      }\n\n      const res = await (await fetch(url, {\n        method,\n        body,\n        headers\n      })).json();\n      !res.ok && setError(res.message || 'Server error');\n      return {\n        res,\n        err\n      };\n    } catch (e) {\n      setError(e);\n    }\n\n    return {\n      err\n    };\n  }, [err, setError]);\n  return {\n    request\n  };\n}; // import { useState, useCallback } from 'react'\n//\n// export const useRequest = () => {\n//     const [err, setError] = useState(null);\n//\n//     const request = useCallback( async (url, method = 'GET', body, headers = {}) => {\n//         try {\n//             if (body) {\n//                 body = JSON.stringify(body);\n//                 headers['Content-type'] ='application/json'\n//             }\n//\n//             const res = await (await fetch(url, { method, body, headers })).json();\n//\n//             !res.ok && setError(res.message || 'Server error');\n//\n//             return { res, err };\n//         } catch (e) {\n//             setError(e);\n//         }\n//\n//         return { err };\n//     }, [err]);\n//\n//     return { request };\n// };\n\n_s(useRequest, \"z53VVYyTL4jiI5LtgH4RNARLc7A=\");","map":{"version":3,"sources":["/Users/artemkonovalov/workspace/mern/client/src/hooks/request.hook.js"],"names":["useState","useCallback","useRequest","err","setError","request","url","method","body","headers","JSON","stringify","res","fetch","json","ok","message","e"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMK,OAAO,GAAGJ,WAAW,CAAC,OAAOK,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAA5B,EAAkCC,OAAO,GAAG,EAA5C,KAAmD;AAC3E,QAAI;AACA,UAAID,IAAJ,EAAU;AACNA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAAyB,kBAAzB;AACH;;AAED,YAAMG,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACP,GAAD,EAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA;AAAhB,OAAN,CAAZ,EAA8CK,IAA9C,EAAlB;AAEA,OAACF,GAAG,CAACG,EAAL,IAAWX,QAAQ,CAACQ,GAAG,CAACI,OAAJ,IAAe,cAAhB,CAAnB;AAEA,aAAO;AAAEJ,QAAAA,GAAF;AAAOT,QAAAA;AAAP,OAAP;AAEH,KAZD,CAYE,OAAOc,CAAP,EAAU;AACTb,MAAAA,QAAQ,CAACa,CAAD,CAAR;AACF;;AAED,WAAO;AAAEd,MAAAA;AAAF,KAAP;AACH,GAlB0B,EAkBxB,CAACA,GAAD,EAAMC,QAAN,CAlBwB,CAA3B;AAoBA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACH,CAxBM,C,CA6BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAtDaH,U","sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useRequest = () => {\n    const [err, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body, headers = {}) => {\n        try {\n            if (body) {\n                body = JSON.stringify(body);\n                headers['Content-type'] ='application/json'\n            }\n\n            const res = await (await fetch(url, { method, body, headers })).json();\n\n            !res.ok && setError(res.message || 'Server error');\n\n            return { res, err };\n\n        } catch (e) {\n           setError(e);\n        }\n\n        return { err }\n    }, [err, setError]);\n\n    return { request };\n}\n\n\n\n\n// import { useState, useCallback } from 'react'\n//\n// export const useRequest = () => {\n//     const [err, setError] = useState(null);\n//\n//     const request = useCallback( async (url, method = 'GET', body, headers = {}) => {\n//         try {\n//             if (body) {\n//                 body = JSON.stringify(body);\n//                 headers['Content-type'] ='application/json'\n//             }\n//\n//             const res = await (await fetch(url, { method, body, headers })).json();\n//\n//             !res.ok && setError(res.message || 'Server error');\n//\n//             return { res, err };\n//         } catch (e) {\n//             setError(e);\n//         }\n//\n//         return { err };\n//     }, [err]);\n//\n//     return { request };\n// };\n"]},"metadata":{},"sourceType":"module"}